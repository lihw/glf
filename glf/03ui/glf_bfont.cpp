// -------------------------------------------------------------- 
// glf_bfont.cpp
// A fixed bitmap for displaying the rendering information, like FPS.
// The font only contains ASCII 32 (space) to ASCII 126 (tide ~).
//
// An OpenGL framework.
//
// All rights reserved by AMD.
//
// Hongwei Li (hongwei.li@amd.com)
// -------------------------------------------------------------- 

#include "glf_bfont.h"

GLF_NAMESPACE_BEGIN
    
const char VS_SHADER[] = 
        "#version 410 core \n"
        "\n"
        "layout (location = 0) in vec3 Position; \n"
        "layout (location = 2) in vec2 Texcoord; \n"
        "\n"
        "layout (location = 0) out vec2 vTexCoord; \n"
        "\n"
        //"uniform mat4 MVP; \n"
        "\n"
        "void main()\n"
        "{\n"
        "    gl_Position = vec4(Position, 1); \n"
        "    vTexCoord = Texcoord.xy; \n"
        "}\n";
        
const char FS_SHADER[] = 
        "#version 410 core \n"
        "\n"
        "uniform sampler2D Texture; \n"
        "uniform vec4 Color; \n"
        "uniform vec4 BitmapInfo; \n"
        "\n"
        "layout(location = 0) in vec2 vTexCoord; \n"
        "\n"
        "layout(location = 0, index = 0) out vec4 FragColor;\n"
        "\n"
        "void main() \n"
        "{\n"
        "    vec2 integerTexCoord = floor(vTexCoord * BitmapInfo.xy);  \n"
        "    vec2 texcoordInAtlas; \n"
        "    texcoordInAtlas.x = (integerTexCoord.y * BitmapInfo.x + integerTexCoord.x + 0.5) * BitmapInfo.z; \n"
        "    texcoordInAtlas.y = BitmapInfo.w; \n"
        "    float density = texture2D(Texture, texcoordInAtlas).x; \n"
        "    if (density < 0.5)\n"
        "    {\n"
        "        discard;\n"
        "    }\n"
        "    FragColor = density * Color; \n"
        "}\n";

// From 0x32 to 0x126 (8x14 size)
const GLubyte BITMAP_FONT8x13_DATA[] = 
{  
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0, 16,  0, 16, 16, 16, 16, 16, 16, 16,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0, 36, 36, 36,  0,  0,
  0,  0,  0,  0, 36, 36,126, 36,126, 36, 36,  0,  0,  0,
  0,  0,  0, 16,120, 20, 20, 56, 80, 80, 60, 16,  0,  0,
  0,  0,  0, 68, 42, 36, 16,  8,  8, 36, 82, 34,  0,  0,
  0,  0,  0, 58, 68, 74, 48, 72, 72, 48,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0, 64, 48, 56,  0,  0,
  0,  0,  0,  4,  8,  8, 16, 16, 16,  8,  8,  4,  0,  0,
  0,  0,  0, 32, 16, 16,  8,  8,  8, 16, 16, 32,  0,  0,
  0,  0,  0,  0,  0, 36, 24,126, 24, 36,  0,  0,  0,  0,
  0,  0,  0,  0,  0, 16, 16,124, 16, 16,  0,  0,  0,  0,
  0,  0, 64, 48, 56,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,126,  0,  0,  0,  0,  0,  0,
  0,  0, 16, 56, 16,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,128,128, 64, 32, 16,  8,  4,  2,  2,  0,  0,
  0,  0,  0, 24, 36, 66, 66, 66, 66, 66, 36, 24,  0,  0,
  0,  0,  0,124, 16, 16, 16, 16, 16, 80, 48, 16,  0,  0,
  0,  0,  0,126, 64, 32, 24,  4,  2, 66, 66, 60,  0,  0,
  0,  0,  0, 60, 66,  2,  2, 28,  8,  4,  2,126,  0,  0,
  0,  0,  0,  4,  4,126, 68, 68, 36, 20, 12,  4,  0,  0,
  0,  0,  0, 60, 66,  2,  2, 98, 92, 64, 64,126,  0,  0,
  0,  0,  0, 60, 66, 66, 98, 92, 64, 64, 32, 28,  0,  0,
  0,  0,  0, 32, 32, 16, 16,  8,  8,  4,  2,126,  0,  0,
  0,  0,  0, 60, 66, 66, 66, 60, 66, 66, 66, 60,  0,  0,
  0,  0,  0, 56,  4,  2,  2, 58, 70, 66, 66, 60,  0,  0,
  0,  0, 16, 56, 16,  0,  0, 16, 56, 16,  0,  0,  0,  0,
  0,  0, 64, 48, 56,  0,  0, 16, 56, 16,  0,  0,  0,  0,
  0,  0,  0,  2,  4,  8, 16, 32, 16,  8,  4,  2,  0,  0,
  0,  0,  0,  0,  0,126,  0,  0,126,  0,  0,  0,  0,  0,
  0,  0,  0, 64, 32, 16,  8,  4,  8, 16, 32, 64,  0,  0,
  0,  0,  0,  8,  0,  8,  8,  4,  2, 66, 66, 60,  0,  0,
  0,  0,  0, 60, 64, 74, 86, 82, 78, 66, 66, 60,  0,  0,
  0,  0,  0, 66, 66, 66,126, 66, 66, 66, 36, 24,  0,  0,
  0,  0,  0,252, 66, 66, 66,124, 66, 66, 66,252,  0,  0,
  0,  0,  0, 60, 66, 64, 64, 64, 64, 64, 66, 60,  0,  0,
  0,  0,  0,252, 66, 66, 66, 66, 66, 66, 66,252,  0,  0,
  0,  0,  0,126, 64, 64, 64,120, 64, 64, 64,126,  0,  0,
  0,  0,  0, 64, 64, 64, 64,120, 64, 64, 64,126,  0,  0,
  0,  0,  0, 58, 70, 66, 78, 64, 64, 64, 66, 60,  0,  0,
  0,  0,  0, 66, 66, 66, 66,126, 66, 66, 66, 66,  0,  0,
  0,  0,  0,124, 16, 16, 16, 16, 16, 16, 16,124,  0,  0,
  0,  0,  0, 56, 68,  4,  4,  4,  4,  4,  4, 31,  0,  0,
  0,  0,  0, 66, 68, 72, 80, 96, 80, 72, 68, 66,  0,  0,
  0,  0,  0,126, 64, 64, 64, 64, 64, 64, 64, 64,  0,  0,
  0,  0,  0,130,130,130,146,146,170,198,130,130,  0,  0,
  0,  0,  0, 66, 66, 66, 70, 74, 82, 98, 66, 66,  0,  0,
  0,  0,  0, 60, 66, 66, 66, 66, 66, 66, 66, 60,  0,  0,
  0,  0,  0, 64, 64, 64, 64,124, 66, 66, 66,124,  0,  0,
  0,  0,  2, 60, 74, 82, 66, 66, 66, 66, 66, 60,  0,  0,
  0,  0,  0, 66, 68, 72, 80,124, 66, 66, 66,124,  0,  0,
  0,  0,  0, 60, 66,  2,  2, 60, 64, 64, 66, 60,  0,  0,
  0,  0,  0, 16, 16, 16, 16, 16, 16, 16, 16,254,  0,  0,
  0,  0,  0, 60, 66, 66, 66, 66, 66, 66, 66, 66,  0,  0,
  0,  0,  0, 16, 40, 40, 40, 68, 68, 68,130,130,  0,  0,
  0,  0,  0, 68,170,146,146,146,130,130,130,130,  0,  0,
  0,  0,  0,130,130, 68, 40, 16, 40, 68,130,130,  0,  0,
  0,  0,  0, 16, 16, 16, 16, 16, 40, 68,130,130,  0,  0,
  0,  0,  0,126, 64, 64, 32, 16,  8,  4,  2,126,  0,  0,
  0,  0,  0, 60, 32, 32, 32, 32, 32, 32, 32, 60,  0,  0,
  0,  0,  0,  2,  2,  4,  8, 16, 32, 64,128,128,  0,  0,
  0,  0,  0,120,  8,  8,  8,  8,  8,  8,  8,120,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0, 68, 40, 16,  0,  0,
  0,  0,254,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 24, 56,  0,  0,
  0,  0,  0, 58, 70, 66, 62,  2, 60,  0,  0,  0,  0,  0,
  0,  0,  0, 92, 98, 66, 66, 98, 92, 64, 64, 64,  0,  0,
  0,  0,  0, 60, 66, 64, 64, 66, 60,  0,  0,  0,  0,  0,
  0,  0,  0, 58, 70, 66, 66, 70, 58,  2,  2,  2,  0,  0,
  0,  0,  0, 60, 66, 64,126, 66, 60,  0,  0,  0,  0,  0,
  0,  0,  0, 32, 32, 32, 32,124, 32, 32, 34, 28,  0,  0,
  0, 60, 66, 60, 64, 56, 68, 68, 58,  0,  0,  0,  0,  0,
  0,  0,  0, 66, 66, 66, 66, 98, 92, 64, 64, 64,  0,  0,
  0,  0,  0,124, 16, 16, 16, 16, 48,  0, 16,  0,  0,  0,
  0, 56, 68, 68,  4,  4,  4,  4, 12,  0,  4,  0,  0,  0,
  0,  0,  0, 66, 68, 72,112, 72, 68, 64, 64, 64,  0,  0,
  0,  0,  0,124, 16, 16, 16, 16, 16, 16, 16, 48,  0,  0,
  0,  0,  0,130,146,146,146,146,236,  0,  0,  0,  0,  0,
  0,  0,  0, 66, 66, 66, 66, 98, 92,  0,  0,  0,  0,  0,
  0,  0,  0, 60, 66, 66, 66, 66, 60,  0,  0,  0,  0,  0,
  0, 64, 64, 64, 92, 98, 66, 98, 92,  0,  0,  0,  0,  0,
  0,  2,  2,  2, 58, 70, 66, 70, 58,  0,  0,  0,  0,  0,
  0,  0,  0, 32, 32, 32, 32, 34, 92,  0,  0,  0,  0,  0,
  0,  0,  0, 60, 66, 12, 48, 66, 60,  0,  0,  0,  0,  0,
  0,  0,  0, 28, 34, 32, 32, 32,124, 32, 32,  0,  0,  0,
  0,  0,  0, 58, 68, 68, 68, 68, 68,  0,  0,  0,  0,  0,
  0,  0,  0, 16, 40, 40, 68, 68, 68,  0,  0,  0,  0,  0,
  0,  0,  0, 68,170,146,146,130,130,  0,  0,  0,  0,  0,
  0,  0,  0, 66, 36, 24, 24, 36, 66,  0,  0,  0,  0,  0,
  0, 60, 66,  2, 58, 70, 66, 66, 66,  0,  0,  0,  0,  0,
  0,  0,  0,126, 32, 16,  8,  4,126,  0,  0,  0,  0,  0,
  0,  0,  0, 14, 16, 16,  8, 48,  8, 16, 16, 14,  0,  0,
  0,  0,  0, 16, 16, 16, 16, 16, 16, 16, 16, 16,  0,  0,
  0,  0,  0,112,  8,  8, 16, 12, 16,  8,  8,112,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0, 72, 84, 36,  0,  0,
};

// From 0x32 to 0x126 (9x15 size)
const GLubyte BITMAP_FONT9x15_DATA[] = 
{
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 18,  0, 18,  0, 18,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36,  0, 36,  0,126,  0, 36,  0, 36,  0,126,  0, 36,  0, 36,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  8,  0, 62,  0, 73,  0,  9,  0,  9,  0, 10,  0, 28,  0, 40,  0, 72,  0, 73,  0, 62,  0,  8,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 66,  0, 37,  0, 37,  0, 18,  0,  8,  0,  8,  0, 36,  0, 82,  0, 82,  0, 33,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 49,  0, 74,  0, 68,  0, 74,  0, 49,  0, 48,  0, 72,  0, 72,  0, 72,  0, 48,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 16,  0,  8,  0,  4,  0,  6,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  4,  0,  8,  0,  8,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0,  8,  0,  8,  0,  4,  0,  0,  0,
    0,  0,  0,  0,  0,  0, 16,  0,  8,  0,  8,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  8,  0,  8,  0, 16,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0, 73,  0, 42,  0, 28,  0, 42,  0, 73,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,127,  0,  8,  0,  8,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  8,  0,  4,  0,  4,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,127,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 64,  0, 32,  0, 32,  0, 16,  0,  8,  0,  8,  0,  4,  0,  2,  0,  2,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 28,  0, 34,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 34,  0, 28,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0, 72,  0, 40,  0, 24,  0,  8,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0, 64,  0, 32,  0, 16,  0,  8,  0,  4,  0,  2,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0,  1,  0,  1,  0,  1,  0, 14,  0,  4,  0,  2,  0,  1,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  2,  0,  2,  0,  2,  0,127,  0, 66,  0, 34,  0, 18,  0, 10,  0,  6,  0,  2,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0,  1,  0,  1,  0,  1,  0, 97,  0, 94,  0, 64,  0, 64,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0, 65,  0, 97,  0, 94,  0, 64,  0, 64,  0, 32,  0, 30,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 32,  0, 32,  0, 16,  0, 16,  0,  8,  0,  4,  0,  2,  0,  1,  0,  1,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 28,  0, 34,  0, 65,  0, 65,  0, 34,  0, 28,  0, 34,  0, 65,  0, 34,  0, 28,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 60,  0,  2,  0,  1,  0,  1,  0, 61,  0, 67,  0, 65,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  8,  0,  4,  0,  4,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0, 12,  0, 12,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  2,  0,  4,  0,  8,  0, 16,  0, 32,  0, 32,  0, 16,  0,  8,  0,  4,  0,  2,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,127,  0,  0,  0,  0,  0,127,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 32,  0, 16,  0,  8,  0,  4,  0,  2,  0,  2,  0,  4,  0,  8,  0, 16,  0, 32,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,  0,  8,  0,  8,  0,  4,  0,  2,  0,  1,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 64,  0, 64,  0, 77,  0, 83,  0, 81,  0, 79,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0,127,  0, 65,  0, 65,  0, 65,  0, 34,  0, 20,  0,  8,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,126,  0, 33,  0, 33,  0, 33,  0, 33,  0,126,  0, 33,  0, 33,  0, 33,  0,126,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,126,  0, 33,  0, 33,  0, 33,  0, 33,  0, 33,  0, 33,  0, 33,  0, 33,  0,126,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0, 32,  0, 32,  0, 32,  0, 32,  0, 60,  0, 32,  0, 32,  0, 32,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 32,  0, 32,  0, 32,  0, 32,  0, 32,  0, 60,  0, 32,  0, 32,  0, 32,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0, 65,  0, 71,  0, 64,  0, 64,  0, 64,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0,127,  0, 65,  0, 65,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 60,  0, 66,  0,  2,  0,  2,  0,  2,  0,  2,  0,  2,  0,  2,  0,  2,  0, 15,128,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 66,  0, 68,  0, 72,  0, 80,  0,112,  0, 72,  0, 68,  0, 66,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0, 73,  0, 73,  0, 85,  0, 85,  0, 99,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0, 67,  0, 69,  0, 73,  0, 81,  0, 97,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 64,  0, 64,  0, 64,  0, 64,  0, 64,  0,126,  0, 65,  0, 65,  0, 65,  0,126,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  3,  0,  4,  0, 62,  0, 73,  0, 81,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 66,  0, 68,  0, 72,  0,126,  0, 65,  0, 65,  0, 65,  0,126,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0,  1,  0,  6,  0, 56,  0, 64,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0, 20,  0, 20,  0, 20,  0, 34,  0, 34,  0, 34,  0, 65,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 34,  0, 85,  0, 73,  0, 73,  0, 73,  0, 73,  0, 65,  0, 65,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 34,  0, 20,  0,  8,  0,  8,  0, 20,  0, 34,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0, 20,  0, 34,  0, 65,  0, 65,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0, 64,  0, 64,  0, 32,  0, 16,  0,  8,  0,  4,  0,  2,  0,  1,  0,127,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, 30,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 16,  0, 30,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  2,  0,  2,  0,  4,  0,  8,  0,  8,  0, 16,  0, 32,  0, 32,  0, 64,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, 60,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0,  4,  0, 60,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 34,  0, 20,  0,  8,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,255,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  8,  0, 16,  0, 48,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 61,  0, 67,  0, 65,  0, 63,  0,  1,  0,  1,  0, 62,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 94,  0, 97,  0, 65,  0, 65,  0, 65,  0, 97,  0, 94,  0, 64,  0, 64,  0, 64,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 64,  0, 64,  0, 64,  0, 65,  0, 62,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 61,  0, 67,  0, 65,  0, 65,  0, 65,  0, 67,  0, 61,  0,  1,  0,  1,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 64,  0, 64,  0,127,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 16,  0, 16,  0, 16,  0, 16,  0,124,  0, 16,  0, 16,  0, 17,  0, 17,  0, 14,  0,  0,  0,  0,  0,
    0,  0, 62,  0, 65,  0, 65,  0, 62,  0, 64,  0, 60,  0, 66,  0, 66,  0, 66,  0, 61,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 97,  0, 94,  0, 64,  0, 64,  0, 64,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0, 56,  0,  0,  0,  0,  0, 24,  0,  0,  0,  0,  0,
    0,  0, 60,  0, 66,  0, 66,  0, 66,  0,  2,  0,  2,  0,  2,  0,  2,  0,  2,  0, 14,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 70,  0, 88,  0, 96,  0, 88,  0, 70,  0, 65,  0, 64,  0, 64,  0, 64,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0, 56,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 73,  0, 73,  0, 73,  0, 73,  0, 73,  0,118,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 97,  0, 94,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0, 65,  0, 65,  0, 65,  0, 65,  0, 62,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, 64,  0, 64,  0, 64,  0, 94,  0, 97,  0, 65,  0, 65,  0, 65,  0, 97,  0, 94,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  1,  0,  1,  0, 61,  0, 67,  0, 65,  0, 65,  0, 65,  0, 67,  0, 61,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 32,  0, 32,  0, 32,  0, 32,  0, 33,  0, 49,  0, 78,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 62,  0, 65,  0,  1,  0, 62,  0, 64,  0, 65,  0, 62,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 14,  0, 17,  0, 16,  0, 16,  0, 16,  0, 16,  0,126,  0, 16,  0, 16,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 61,  0, 66,  0, 66,  0, 66,  0, 66,  0, 66,  0, 66,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  8,  0, 20,  0, 20,  0, 34,  0, 34,  0, 65,  0, 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 34,  0, 85,  0, 73,  0, 73,  0, 73,  0, 65,  0, 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, 65,  0, 34,  0, 20,  0,  8,  0, 20,  0, 34,  0, 65,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, 60,  0, 66,  0,  2,  0, 58,  0, 70,  0, 66,  0, 66,  0, 66,  0, 66,  0, 66,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,127,  0, 32,  0, 16,  0,  8,  0,  4,  0,  2,  0,127,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  7,  0,  8,  0,  8,  0,  8,  0,  4,  0, 24,  0, 24,  0,  4,  0,  8,  0,  8,  0,  8,  0,  7,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  8,  0,  0,  0,
    0,  0,  0,  0,  0,  0,112,  0,  8,  0,  8,  0,  8,  0, 16,  0, 12,  0, 12,  0, 16,  0,  8,  0,  8,  0,  8,  0,112,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 70,  0, 73,  0, 49,  0,  0,  0,  0,  0,
};


BFont::BFont(BitmapFontEnum font)
{
    _texture  = NULL;
    _rect     = NULL;

    if (font == BITMAP_FONT_8X13)
    {
        _fontSize[0] = 8;
        _fontSize[1] = 14;

        create((GLubyte*)BITMAP_FONT8x13_DATA);
    }
    else 
    {
        _fontSize[0] = 9;
        _fontSize[1] = 16;
        
        create((GLubyte*)BITMAP_FONT9x15_DATA);
    }
}

BFont::~BFont()
{
    delete _rect;
    delete _texture;
}

void BFont::drawText(const char* text, GLuint x, GLuint y, const GLfloat* color)
{
    // -------------------------------------------------------------- 
    // Setup
    // -------------------------------------------------------------- 
    GLuint posx = x;
    GLuint posy = y;

    _rect->getShader()->getUniform("Color")->setValue(color[0], color[1], color[2], color[3]);
    _rect->getShader()->getUniform("Texture")->setValue((GLuint)(0));

    _texture->enable(0);

    GLint viewport[4];
    glGetIntegerv(GL_VIEWPORT, viewport);

    _projection = glm::ortho(0.0f, (GLfloat)viewport[2], 0.0f, (GLfloat)viewport[3]);

    // -------------------------------------------------------------- 
    // Draw each font.
    // -------------------------------------------------------------- 
    const char* p = text;

    while (*p != 0)
    {
        char c = *p; 
        if (c > 32 && c <= 126)
        {
            drawCharacter(c, posx, posy);
            posx += getWidth();
        }
        else if (c == ' ')
        {
            posx += _fontSize[0];
        }
        else if (c == '\n')
        {
            posx = x; 
            posy += _fontSize[1];
        }
        p++;
    };

    // -------------------------------------------------------------- 
    // Cleanup
    // -------------------------------------------------------------- 
    _texture->disable();
}

void BFont::drawCharacter(char text, GLuint x, GLuint y)
{
    //_rect->getShader()->getUniform("MVP")->setValue(_projection);
    _rect->getShader()->getUniform("BitmapInfo")->setValue(
                (GLfloat)_fontSize[0],
                (GLfloat)_fontSize[1],
                1.0f / (_fontSize[0] * _fontSize[1]),
                ((GLfloat)(text - 32) + 0.5f) / 95.0f);

    _rect->setPosition(x, y);
    _rect->render();
}

void BFont::expandBitmap(const GLubyte* bitmap, GLubyte* image) const
{
    GLuint bytesPerRow = (_fontSize[0] + 7) / 8;
    const GLubyte* row = bitmap;
    GLubyte* p = image;
    for (GLuint i = 0; i < _fontSize[1]; ++i)
    {
        for (GLuint j = 0; j < _fontSize[0]; ++j)
        {
            GLuint bytes = j / 8;
            GLuint bits = 7 - j % 8;

#define BIT2BYTE(x, n)   (((x) & (1 << (n))) >> (n)) * 255;
            *p++ = BIT2BYTE(row[bytes], bits); 
#undef BIT2BYTE
        }
        row += bytesPerRow;
    }
}

void BFont::create(GLubyte* fontData)
{
    // How many bytes per row for this bitmap font.
    const GLuint bitmapRowBytes = (_fontSize[0] + 7) / 8;
    // How many bytes of each bitmap font.
    const GLuint bitmapBytes = bitmapRowBytes * _fontSize[1];
    const GLuint nfonts = 95; // The font number.
    const GLuint fontBytes = _fontSize[0] * _fontSize[1];

    // Convert the bitmap of each font to the gray image.
    GLubyte* font = new GLubyte [fontBytes * nfonts];
    GLubyte* f = font;
    for (GLuint i = 0;  i < nfonts; ++i)
    {
        expandBitmap(&fontData[i * bitmapBytes], f);
        f += fontBytes;
    }   
    
    // Create the image and texture.
    _texture = new Texture;
    _texture->create(font, fontBytes, nfonts, GL_R8);
    delete [] font;

    // Create the geometry
    _rect = new glf::Rect(VS_SHADER, FS_SHADER);
    _rect->setSize(_fontSize[0], _fontSize[1]);
}

GLF_NAMESPACE_END